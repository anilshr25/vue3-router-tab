@use "sass:math";

// Fallback palette (overridden by CSS vars when present)
$primary-fallback: #635bff;
$light-bg: #ffffff;
$light-text: #1e293b;
$light-border: rgba(15, 23, 42, 0.08);

$font-size: 14px;
$tab-trans: all 0.3s ease-in-out;
$hd-height: 40px;
$tab-padding: 20px;
$close-icon-margin: 4px;
$close-icon-size: 13px;

/// Utility to fetch a CSS variable with a graceful fallback.
@function css-var($name, $fallback) {
  @return unquote("var(#{$name}, #{$fallback})");
}

.router-tab {
  $bg: css-var(--router-tab-background, css-var(--theme-background, $light-bg));
  $fg: css-var(--router-tab-foreground, css-var(--theme-foreground, $light-text));
  $border: css-var(--router-tab-border, css-var(--theme-border, $light-border));
  $primary: css-var(--router-tab-primary, css-var(--theme-primary, $primary-fallback));
  $header-bg: css-var(--router-tab-header-bg, $bg);

  display: flex;
  flex-direction: column;
  min-height: 300px;
  background-color: $bg;
  color: $fg;

  &__header {
    position: relative;
    z-index: 9;
    display: flex;
    flex: none;
    box-sizing: border-box;
    height: $hd-height;
    border-bottom: 1px solid $border;
    background-color: $header-bg;
    transition: all 0.2s ease-in-out;
  }

  &__scroll {
    position: relative;
    flex: 1 1 0px;
    height: $hd-height;
    overflow: hidden;

    &-container {
      width: 100%;
      height: 100%;
      overflow: hidden;

      &.is-mobile {
        overflow-x: auto;
        overflow-y: hidden;
      }
    }
  }

  &__scrollbar {
    $h: 3px;

    position: absolute;
    right: 0;
    bottom: 0;
    left: 0;
    height: $h;
    background-color: rgba(0, 0, 0, 0.1);
    border-radius: $h;
    opacity: 0;
    transition: opacity 0.3s ease-in-out;

    .router-tab__scroll:hover &,
    &.is-dragging {
      opacity: 1;
    }

    &-thumb {
      position: absolute;
      top: 0;
      left: 0;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.1);
      border-radius: $h;
      transition: background-color 0.3s ease-in-out;

      &:hover,
      .router-tab__scrollbar.is-dragging & {
        background-color: rgba(0, 0, 0, 0.2);
      }
    }
  }

  &__nav {
    position: relative;
    display: inline-flex;
    flex-wrap: nowrap;
    height: 100%;
    margin: 0;
    padding: 0;
    list-style: none;
  }

  &__item {
    position: relative;
    display: flex;
    flex: none;
    align-items: center;
    padding: 0 $tab-padding;
    color: inherit;
    font-size: $font-size;
    border: 1px solid $border;
    border-left: none;
    transform-origin: left bottom;
    cursor: pointer;
    transition: $tab-trans;
    user-select: none;
    background-color: transparent;

    &:first-child {
      border-left: 1px solid $border;
    }

    &.is-contextmenu {
      color: $primary;
    }

    &.is-drag-over {
      background: rgba(0, 0, 0, 0.05);
      transition: background 0.15s ease;
    }

    &-title {
      min-width: 30px;
      max-width: 120px;
      overflow: hidden;
      white-space: nowrap;
      text-overflow: ellipsis;
    }

    &-icon {
      margin-right: 5px;
      font-size: 16px;
    }

    &:hover,
    &.is-active {
      color: $primary;

      &.is-closable {
        padding: 0 ($tab-padding - math.div($close-icon-size + $close-icon-margin, 2));
      }

      .router-tab__item-close {
        width: $close-icon-size;
        margin-left: $close-icon-margin;

        &::before,
        &::after {
          background-color: #fff;
        }
      }
    }

    &.is-active {
      border-bottom-color: $bg;
    }

    &-close {
      $inner: 8px;

      position: relative;
      display: block;
      width: 0;
      height: $close-icon-size;
      margin-left: 0;
      overflow: hidden;
      border-radius: 50%;
      cursor: pointer;
      transition: $tab-trans;
      background: transparent;
      border: none;

      &::before,
      &::after {
        position: absolute;
        top: 6px;
        left: 50%;
        display: block;
        width: $inner;
        height: 1px;
        margin-left: math.div(-$inner, 2);
        background-color: currentColor;
        transition: background-color 0.2s ease-in-out;
        content: '';
      }

      &::before {
        transform: rotate(-45deg);
      }

      &::after {
        transform: rotate(45deg);
      }

      &:hover {
        background-color: color-mix(in srgb, $primary 40%, #ffffff 60%);

        &::before,
        &::after {
          background-color: #fff;
        }
      }
    }
  }

  &__contextmenu {
    position: fixed;
    z-index: 1000;
    min-width: 140px;
    padding: 8px 0;
    font-size: $font-size;
    background: $bg;
    border: 1px solid $border;
    box-shadow: 0 10px 30px rgba(15, 23, 42, 0.15);
    border-radius: 8px;

    a,
    button {
      display: block;
      width: 100%;
      padding: 0 16px;
      line-height: 30px;
      text-align: left;
      background: transparent;
      border: none;
      color: inherit;
      cursor: pointer;
      font: inherit;
      transition: background-color 0.2s ease-in-out;

      &[aria-disabled='true'] {
        color: rgba(148, 163, 184, 0.6);
        pointer-events: none;
      }

      &:hover,
      &:focus-visible {
        background: color-mix(in srgb, $primary 20%, #ffffff 80%);
        color: $primary;
      }
    }
  }
}

.router-tab__container {
  padding: 1rem;
  position: relative;
  flex: 1 1 auto;
  background-color: css-var(--router-tab-background, css-var(--theme-background, $light-bg));
}

.router-tab__item.is-active + .router-tab__item {
  border-left-color: css-var(--router-tab-border, css-var(--theme-border, $light-border));
}
